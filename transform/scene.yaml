# transform block changes original data string data to numbers, eg:
# "10% below" to "-10"
# then displays with a ColorBrewer palette with various interactive options

sources:
    mapzen:
        type: TopoJSON
        url: https://tile.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson
        url_params:
            api_key: mapzen-tDHBHDp
        max_zoom: 16
    retail:
        type: GeoJSON
        url: ../retail-spending-potential.geojson
        # url: sample.geojson
        scripts: ['../lib/colorbrewer.min.js']
        transform: |
            function (data, extra_data) {
                data.features.forEach(function(feature) { 
                    var d = feature.properties.retailspending_pct_usavg;
                    var match = /([0-9]*)\% (.*)/.exec(d);
                    value = (match[2] === "below" ? '-' : '')+match[1];
                    feature.properties.retailspending_pct_usavg = (parseInt(value) + 100) / 2;
                });
                return data;
            }

global:
    sdk_mapzen_api_key: mapzen-PvCT6iP
    minval: 0
    maxval: 151
    divisions: 6
    textvisible: false
    linesvisible: false

scene:
    background:
        color: black

layers:
    transform-linear:
        enabled: true
        data: { source: retail }
        draw:
            text:
                visible: global.textvisible
                collide: true
                text_source: |
                    function() {
                        var f = feature.retailspending_pct_usavg;
                        return Math.floor(f);
                    }
                font:
                    fill: red
                    size: 10px
            polygons:
                order: 3
                color: |
                    function() {
                        var gradient = colorbrewer.Reds[global.divisions];
                        var min = global.minval;
                        var max = global.maxval;
                        var f = feature.retailspending_pct_usavg - min;
                        f /= max + min;
                        var i = Math.floor(f * gradient.length);
                        i = Math.min(i, gradient.length - 1);
                        i = Math.max(i, 0);
                        return gradient[i];
                    }
    water:
        data:
            source: mapzen
        draw:
            polygons:
                order: 0
                color: '#222'
    boundaries:
        data:
            source: mapzen
        draw:
            lines:
                order: 1
                color: '#222'
                width: 2px
